swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Profile
      description: API to fetch a user's profile.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/UserProfile'
        '400':
          description: Invalid request
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating a user's profile.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal Server Error

  /transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transactions for the current month grouped by account
      description: Retrieve all transactions for the current month, grouped by account type (checking, saving, credit card)
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transactions grouped by account retrieved successfully
          schema:
            $ref: '#/definitions/TransactionGroupResponse'
        '400':
          description: Invalid request
        '404':
          description: Transactions not found
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction details
      description: Retrieve the details of a specific transaction by its ID.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetails'
        '400':
          description: Invalid transaction ID
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update transaction
      description: Update the category or note of a specific transaction by its ID.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction
        - in: body
          name: body
          description: Update category or note for the transaction
          required: true
          schema:
            $ref: '#/definitions/UpdateTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete transaction
      description: Delete a specific transaction by its ID.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction to delete
      produces:
        - application/json
      responses:
        '200':
          description: Transaction deleted successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid transaction ID
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string

  Login:
    properties:
      email:
        type: string
      password:
        type: string

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  TransactionGroupResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          type: object
          properties:
            accountType:
              type: string
              description: Type of account (checking, saving, credit card)
            transactions:
              type: array
              items:
                $ref: '#/definitions/TransactionDetails'

  TransactionDetails:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
      note:
        type: string

  UpdateTransaction:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
