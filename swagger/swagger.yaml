swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  #login
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  #signup
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  #user profile post 
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
    #user profile put 
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  #get all transactions for the current month
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get all transactions for the current month, grouped by account
      description: Returns all transactions for the current month, grouped by account.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  #get details of a specific transaction
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get transaction details
      description: Retrieve the details of a specific transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to retrieve.
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetail'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  #add a new transaction
  /transactions:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Add a new transaction
      description: Adds a new transaction.
      parameters:
        - in: body
          name: body
          description: Transaction data to be added
          required: true
          schema:
            $ref: '#/definitions/Transaction'
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  #update a transaction
  /transactions/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update a transaction
      description: Updates the details of an existing transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to update.
        - in: body
          name: body
          description: Updated transaction data
          required: true
          schema:
            $ref: '#/definitions/Transaction'
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

  #delete a transaction
  /transactions/{transactionId}:
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Delete a transaction
      description: Deletes a specific transaction.
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to delete.
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        '200':
          description: Transaction deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      amount:
        type: number
        format: float
      description:
        type: string
      date:
        type: string
        format: date-time

  TransactionDetail:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      amount:
        type: number
        format: float
      description:
        type: string
      date:
        type: string
        format: date-time
      category:
        type: string
      merchant:
        type: string


# - ajout de cinq nouveaux endpoints sous la section paths pour gérer les transactions :
#   GET /transactions: pour obtenir toutes les transactions du mois en cours

#   GET /transactions/{transactionId}: pour obtenir les détails d'une transaction spécifique

#   POST /transactions: pour ajouter une nouvelle transaction

#   PUT /transactions/{transactionId}: pour mettre à jour une transaction existante

#   DELETE /transactions/{transactionId}: pour supprimer une transaction


# - définition des modèles nécessaires (Transaction, TransactionDetail) dans la section definitions